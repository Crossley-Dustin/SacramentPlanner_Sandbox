// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SacramentPlanner_Sandbox.Data;
using System;

namespace SacramentPlanner_Sandbox.Migrations
{
    [DbContext(typeof(MeetingContext))]
    [Migration("20171214072114_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SacramentPlanner_Sandbox.Models.Hymn", b =>
                {
                    b.Property<Guid>("HymnID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HymnName");

                    b.Property<int>("HymnNumber");

                    b.HasKey("HymnID");

                    b.ToTable("Hymn");
                });

            modelBuilder.Entity("SacramentPlanner_Sandbox.Models.Meeting", b =>
                {
                    b.Property<int>("MeetingID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid?>("ClosingHymnHymnID");

                    b.Property<int?>("ClosingPrayerPersonID");

                    b.Property<int?>("ConductingPersonID");

                    b.Property<string>("IntermediateSong");

                    b.Property<DateTime>("MeetingDate");

                    b.Property<Guid?>("OpeningHymnHymnID");

                    b.Property<int?>("OpeningPrayerPersonID");

                    b.Property<Guid?>("SacramentHymnHymnID");

                    b.HasKey("MeetingID");

                    b.HasIndex("ClosingHymnHymnID");

                    b.HasIndex("ClosingPrayerPersonID");

                    b.HasIndex("ConductingPersonID");

                    b.HasIndex("OpeningHymnHymnID");

                    b.HasIndex("OpeningPrayerPersonID");

                    b.HasIndex("SacramentHymnHymnID");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("SacramentPlanner_Sandbox.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator");

                    b.Property<string>("FirstMidName");

                    b.Property<string>("LastName");

                    b.HasKey("PersonID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("SacramentPlanner_Sandbox.Models.Speaker", b =>
                {
                    b.Property<int>("SpeakerID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AssignedTopic");

                    b.Property<int?>("MeetingID1");

                    b.Property<int?>("PersonID1");

                    b.HasKey("SpeakerID");

                    b.HasIndex("MeetingID1");

                    b.HasIndex("PersonID1");

                    b.ToTable("Speaker");
                });

            modelBuilder.Entity("SacramentPlanner_Sandbox.Models.Meeting", b =>
                {
                    b.HasOne("SacramentPlanner_Sandbox.Models.Hymn", "ClosingHymn")
                        .WithMany()
                        .HasForeignKey("ClosingHymnHymnID");

                    b.HasOne("SacramentPlanner_Sandbox.Models.Person", "ClosingPrayer")
                        .WithMany()
                        .HasForeignKey("ClosingPrayerPersonID");

                    b.HasOne("SacramentPlanner_Sandbox.Models.Person", "Conducting")
                        .WithMany()
                        .HasForeignKey("ConductingPersonID");

                    b.HasOne("SacramentPlanner_Sandbox.Models.Hymn", "OpeningHymn")
                        .WithMany()
                        .HasForeignKey("OpeningHymnHymnID");

                    b.HasOne("SacramentPlanner_Sandbox.Models.Person", "OpeningPrayer")
                        .WithMany()
                        .HasForeignKey("OpeningPrayerPersonID");

                    b.HasOne("SacramentPlanner_Sandbox.Models.Hymn", "SacramentHymn")
                        .WithMany()
                        .HasForeignKey("SacramentHymnHymnID");
                });

            modelBuilder.Entity("SacramentPlanner_Sandbox.Models.Speaker", b =>
                {
                    b.HasOne("SacramentPlanner_Sandbox.Models.Meeting", "MeetingID")
                        .WithMany("Speaker")
                        .HasForeignKey("MeetingID1");

                    b.HasOne("SacramentPlanner_Sandbox.Models.Person", "PersonID")
                        .WithMany()
                        .HasForeignKey("PersonID1");
                });
#pragma warning restore 612, 618
        }
    }
}
