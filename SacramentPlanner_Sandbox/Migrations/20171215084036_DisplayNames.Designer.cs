// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using SacramentPlanner_Sandbox.Data;
using System;

namespace SacramentPlanner_Sandbox.Migrations
{
    [DbContext(typeof(MeetingContext))]
    [Migration("20171215084036_DisplayNames")]
    partial class DisplayNames
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SacramentPlanner_Sandbox.Models.Hymn", b =>
                {
                    b.Property<Guid>("HymnID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HymnName");

                    b.Property<int>("HymnNumber");

                    b.HasKey("HymnID");

                    b.ToTable("Hymn");
                });

            modelBuilder.Entity("SacramentPlanner_Sandbox.Models.Meeting", b =>
                {
                    b.Property<int>("MeetingID")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClosingHymn");

                    b.Property<int>("ClosingPrayer");

                    b.Property<int>("Conducting");

                    b.Property<string>("IntermediateSong");

                    b.Property<DateTime>("MeetingDate");

                    b.Property<Guid>("OpeningHymn");

                    b.Property<int>("OpeningPrayer");

                    b.Property<Guid>("SacramentHymn");

                    b.HasKey("MeetingID");

                    b.ToTable("Meeting");
                });

            modelBuilder.Entity("SacramentPlanner_Sandbox.Models.Person", b =>
                {
                    b.Property<int>("PersonID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Discriminator");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("MiddleInitial");

                    b.HasKey("PersonID");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("SacramentPlanner_Sandbox.Models.Speaker", b =>
                {
                    b.Property<int>("SpeakerID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AssignedTopic");

                    b.Property<int>("MeetingID");

                    b.Property<int>("PersonID");

                    b.HasKey("SpeakerID");

                    b.HasIndex("MeetingID");

                    b.HasIndex("SpeakerID", "MeetingID", "PersonID");

                    b.ToTable("Speaker");
                });

            modelBuilder.Entity("SacramentPlanner_Sandbox.Models.Speaker", b =>
                {
                    b.HasOne("SacramentPlanner_Sandbox.Models.Meeting")
                        .WithMany("Speakers")
                        .HasForeignKey("MeetingID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
